{"remainingRequest":"D:\\SOFTWARE\\Programming\\Java\\Projects\\غير منتهية او اختبار\\app\\webui\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\SOFTWARE\\Programming\\Java\\Projects\\غير منتهية او اختبار\\app\\webui\\node_modules\\@nebular\\theme\\components\\search\\search.service.js","dependencies":[{"path":"D:\\SOFTWARE\\Programming\\Java\\Projects\\غير منتهية او اختبار\\app\\webui\\node_modules\\@nebular\\theme\\components\\search\\search.service.js","mtime":1519306628000},{"path":"D:\\SOFTWARE\\Programming\\Java\\Projects\\غير منتهية او اختبار\\app\\webui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1510929699000},{"path":"D:\\SOFTWARE\\Programming\\Java\\Projects\\غير منتهية او اختبار\\app\\webui\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { share } from 'rxjs/operators/share';\n/**\n * Search component service, connects you code to a page-level search component.\n */\nvar NbSearchService = /*@__PURE__*/ (function () {\n    function NbSearchService() {\n        this.searchSubmittings$ = new Subject();\n        this.searchActivations$ = new Subject();\n        this.searchDeactivations$ = new Subject();\n    }\n    /***\n     * Activate (open) search component\n     * @param {string} searchType\n     * @param {string} tag\n     */\n    /***\n       * Activate (open) search component\n       * @param {string} searchType\n       * @param {string} tag\n       */\n    NbSearchService.prototype.activateSearch = /***\n       * Activate (open) search component\n       * @param {string} searchType\n       * @param {string} tag\n       */\n        function (searchType, tag) {\n            this.searchActivations$.next({ searchType: searchType, tag: tag });\n        };\n    /**\n     * Deactibate (close) search component\n     * @param {string} searchType\n     * @param {string} tag\n     */\n    /**\n       * Deactibate (close) search component\n       * @param {string} searchType\n       * @param {string} tag\n       */\n    NbSearchService.prototype.deactivateSearch = /**\n       * Deactibate (close) search component\n       * @param {string} searchType\n       * @param {string} tag\n       */\n        function (searchType, tag) {\n            this.searchDeactivations$.next({ searchType: searchType, tag: tag });\n        };\n    /**\n     * Trigger search submit\n     * @param {string} term\n     * @param {string} tag\n     */\n    /**\n       * Trigger search submit\n       * @param {string} term\n       * @param {string} tag\n       */\n    NbSearchService.prototype.submitSearch = /**\n       * Trigger search submit\n       * @param {string} term\n       * @param {string} tag\n       */\n        function (term, tag) {\n            this.searchSubmittings$.next({ term: term, tag: tag });\n        };\n    /**\n     * Subscribe to 'activate' event\n     * @returns Observable<{searchType: string; tag?: string}>\n     */\n    /**\n       * Subscribe to 'activate' event\n       * @returns Observable<{searchType: string; tag?: string}>\n       */\n    NbSearchService.prototype.onSearchActivate = /**\n       * Subscribe to 'activate' event\n       * @returns Observable<{searchType: string; tag?: string}>\n       */\n        function () {\n            return this.searchActivations$.pipe(share());\n        };\n    /**\n     * Subscribe to 'deactivate' event\n     * @returns Observable<{searchType: string; tag?: string}>\n     */\n    /**\n       * Subscribe to 'deactivate' event\n       * @returns Observable<{searchType: string; tag?: string}>\n       */\n    NbSearchService.prototype.onSearchDeactivate = /**\n       * Subscribe to 'deactivate' event\n       * @returns Observable<{searchType: string; tag?: string}>\n       */\n        function () {\n            return this.searchDeactivations$.pipe(share());\n        };\n    /**\n     * Subscribe to 'submit' event (when submit button clicked)\n     * @returns Observable<{term: string; tag?: string}>\n     */\n    /**\n       * Subscribe to 'submit' event (when submit button clicked)\n       * @returns Observable<{term: string; tag?: string}>\n       */\n    NbSearchService.prototype.onSearchSubmit = /**\n       * Subscribe to 'submit' event (when submit button clicked)\n       * @returns Observable<{term: string; tag?: string}>\n       */\n        function () {\n            return this.searchSubmittings$.pipe(share());\n        };\n    return NbSearchService;\n}());\nexport { NbSearchService };\n//# sourceMappingURL=search.service.js.map \n",null]}