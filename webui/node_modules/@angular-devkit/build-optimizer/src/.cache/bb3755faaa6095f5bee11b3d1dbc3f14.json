{"remainingRequest":"D:\\SOFTWARE\\Programming\\Java\\Projects\\غير منتهية او اختبار\\app\\webui\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\SOFTWARE\\Programming\\Java\\Projects\\غير منتهية او اختبار\\app\\webui\\node_modules\\@ngx-loading-bar\\http-client\\@ngx-loading-bar\\http-client.es5.js","dependencies":[{"path":"D:\\SOFTWARE\\Programming\\Java\\Projects\\غير منتهية او اختبار\\app\\webui\\node_modules\\@ngx-loading-bar\\http-client\\@ngx-loading-bar\\http-client.es5.js","mtime":1519809507000},{"path":"D:\\SOFTWARE\\Programming\\Java\\Projects\\غير منتهية او اختبار\\app\\webui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1510929699000},{"path":"D:\\SOFTWARE\\Programming\\Java\\Projects\\غير منتهية او اختبار\\app\\webui\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { LoadingBarModule, LoadingBarService } from '@ngx-loading-bar/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { HTTP_INTERCEPTORS, HttpClientModule, HttpEventType } from '@angular/common/http';\nimport { _do as _do$1 } from 'rxjs/operator/do';\nimport { _finally as _finally$1 } from 'rxjs/operator/finally';\nvar LoadingBarInterceptor = /*@__PURE__*/ (function () {\n    /**\n     * @param {?} loadingBar\n     */\n    function LoadingBarInterceptor(loadingBar) {\n        this.loadingBar = loadingBar;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    LoadingBarInterceptor.prototype.intercept = function (req, next) {\n        var _this = this;\n        // https://github.com/angular/angular/issues/18155\n        if (req.headers.has('ignoreLoadingBar')) {\n            return next.handle(req.clone({ headers: req.headers.delete('ignoreLoadingBar') }));\n        }\n        var /** @type {?} */ started = false;\n        return _finally$1.call(_do$1.call(next.handle(req), function (event) {\n            if (!started && event.type === HttpEventType.Sent) {\n                started = true;\n                _this.loadingBar.start();\n            }\n            else if (started && event.type === HttpEventType.Response) {\n                started = false;\n                _this.loadingBar.complete();\n            }\n        }), function () { return started && _this.loadingBar.complete(); });\n    };\n    return LoadingBarInterceptor;\n}());\nvar LoadingBarHttpClientModule = /*@__PURE__*/ (function () {\n    function LoadingBarHttpClientModule() {\n    }\n    return LoadingBarHttpClientModule;\n}());\n/**\n * Generated bundle index. Do not edit.\n */\nexport { LoadingBarHttpClientModule, LoadingBarInterceptor as ɵa };\n//# sourceMappingURL=http-client.es5.js.map\n",null]}