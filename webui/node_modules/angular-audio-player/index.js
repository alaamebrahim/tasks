import { Component, Input } from '@angular/core';
import { BehaviorSubject } from 'rxjs';

var AudioPlayerComponent = (function () {
    function AudioPlayerComponent() {
        this.mp3 = '';
        this.downloadUrl = '';
        this.state$ = new BehaviorSubject('pause');
        this.audio = new Audio();
    }
    /**
     * @return {?}
     */
    AudioPlayerComponent.prototype.ngOnInit = function () {
        this.audio.src = this.mp3;
    };
    /**
     * @return {?}
     */
    AudioPlayerComponent.prototype.ngOnDestroy = function () {
        this.mp3 = '';
        this.audio.src = '';
        this.audio.remove();
    };
    /**
     * @return {?}
     */
    AudioPlayerComponent.prototype.togglePlayer = function () {
        if (this.state$.value === 'pause') {
            this.state$.next('play');
            this.audio.play();
        }
        else {
            this.state$.next('pause');
            this.audio.pause();
        }
    };
    /**
     * @return {?}
     */
    AudioPlayerComponent.prototype.downloadPodcast = function () {
    };
    return AudioPlayerComponent;
}());
AudioPlayerComponent.decorators = [
    { type: Component, args: [{
                selector: 'up-audio-player',
                template: "<p> <a class=\"button\" title=\"Play/Pause\" (click)=\"togglePlayer()\" > <i *ngIf=\"(state$ | async) === 'pause'\" class=\"fa fa-play\"></i> <i *ngIf=\"(state$ | async) === 'play'\" class=\"fa fa-pause\"></i> </a> <a class=\"button is-inverted\" title=\"Download Podcast\" href=\"{{downloadUrl}}\" target=\"_blank\" > <i class=\"fa fa-download\"></i> </a> </p> ",
                styles: [".button { text-transform: uppercase; font-weight: 900; font-size: 18px; margin-bottom: 6px; padding: 28px 20px; color: white; background-color: red-light; border: 0; } .button .fa { position: relative; font-size: 18px; } .button.is-inverted { color: red-light; background-color: white; margin-left: 7px; } "]
            },] },
];
/**
 * @nocollapse
 */
AudioPlayerComponent.ctorParameters = function () { return []; };
AudioPlayerComponent.propDecorators = {
    'mp3': [{ type: Input },],
    'downloadUrl': [{ type: Input },],
};

export { AudioPlayerComponent };
